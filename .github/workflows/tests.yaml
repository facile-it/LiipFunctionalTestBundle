name: CI

on:
  pull_request: null
  push:
    branches:
      - 1.x

jobs:
  Tests:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental == true }}
    strategy:
      matrix:
        php:
          - '7.4'
          - '7.3'
          - '7.2'
        composer_option: ['']
        experimental: [false]
        include:
#          - description: 'nightly'
#            os: 'ubuntu-latest'
#            php: '8.0'
          - description: 'Symfony 3.4'
            os: 'ubuntu-latest'
            php: '7.2'
            symfony_require: '^3.4'
            deprecations: 'disabled'
          - description: 'Symfony 4.4'
            os: 'ubuntu-latest'
            php: '7.4'
            symfony_require: '^4.4'
          - description: 'Symfony 5'
            os: 'ubuntu-latest'
            php: '7.4'
            symfony_require: '^5'
          - description: '(prefer lowest)'
            os: 'ubuntu-latest'
            php: '7.2'
            dependencies: 'lowest'
            deprecations: 'disabled'

    name: PHP ${{ matrix.php }} ${{ matrix.description }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug
      - name: Restrict Symfony version
        run: composer require "symfony/symfony:${{ matrix.symfony_require }}" --no-update
        if: matrix.symfony_require
      - name: Install dependencies
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: ${{ matrix.dependencies }}
      - run: vendor/bin/phpunit --coverage-clover=coverage.xml
      - uses: codecov/codecov-action@v1
        with:
          file: './coverage.xml'
          fail_ci_if_error: true
  StaticAnalysis:
    name: ${{ matrix.description }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - description: Validate composer.json
            script: composer validate
          - description: Code style
            script: composer cs-check
          - description: PHPStan
            script: vendor/bin/phpstan analyze
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
      - name: Install dependencies
        uses: "ramsey/composer-install@v1"
      - run: ${{ matrix.script }}
